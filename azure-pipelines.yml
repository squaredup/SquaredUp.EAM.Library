--- 
    name: $(Rev:r)
    stages: 
        -
            stage: buildStage
            displayName: 'Build Stage'
            pool:
                vmImage: "vs2017-win2016"
                name: Azure Pipelines
                demands:
                    - msbuild
                    - visualstudio
                    - Cmd
                    - vstest
            jobs:
                - 
                    job: "buildJob"
                    displayName: "Build Job"
                    steps:
                      - task: DownloadSecureFile@1
                        inputs:
                            secureFile: 'data-on-demand.snk'
                        name: STRONGNAME_KEY
                        displayName: "Download secure file"

                      - task: ArtifactoryGenericDownload@3
                        inputs:
                            connection: 'jFrog-Artifactory'
                            specSource: 'taskConfiguration'
                            fileSpec: |
                              {
                                "files": [
                                  {
                                    "pattern": "public/com/squaredup/vsae-msi/VisualStudioAuthoringConsole_x86.msi",
                                    "target": "VSAE/VisualStudioAuthoringConsole_x86.msi"
                                  }
                                ]
                              }

                      - task: PowerShell@2
                        name: "prebuildTask"
                        inputs:
                          targetType: 'inline'
                          script: |
                            $date=$(Get-Date -Format "yyyyMMdd.HHmmss");
                            Write-Host "##vso[task.setvariable variable=Build_Date;isOutput=true]$date"
                            $file = "$(System.DefaultWorkingDirectory)\VSAE\com\squaredup\vsae-msi\VisualStudioAuthoringConsole_x86.msi"
                            $DataStamp = get-date -Format yyyyMMddTHHmmss
                            $logFile = '{0}-{1}.log' -f $file,$DataStamp
                            $MSIArguments = @(
                                "/i"
                                ('"{0}"' -f $file)
                                "/qn"
                                "/norestart"
                                "/L*v"
                                $logFile
                            )
                            Start-Process "msiexec.exe" -ArgumentList $MSIArguments -Wait -NoNewWindow  
                            get-content $logFile

                            get-childItem ManagementPacks -recurse -force
                          failOnStderr: true
                          failNoOp: true

                      - task: MSBuild@1
                        inputs:
                          solution: '$(buildsolutionFile2)'
                          platform: '$(buildPlatform)'
                          configuration: '$(buildConfiguration)'
                          msbuildArguments: '/p:Version=1.0.0.0 /p:AssemblyOriginatorKeyFile=$(STRONGNAME_KEY.secureFilePath)'
                          clean: true
                          createLogFile: true

                      - task: MSBuild@1
                        inputs:
                          solution: '$(buildsolutionFile2)'
                          platform: '$(buildPlatform)'
                          configuration: '$(buildConfiguration)'
                          msbuildArguments: '/p:Version=$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION).$(BUILD_NUMBER) /p:AssemblyOriginatorKeyFile=$(STRONGNAME_KEY.secureFilePath)'
                          clean: true
                          createLogFile: true

                      - task: ArtifactoryGenericUpload@2
                        inputs:
                            artifactoryService: 'jFrog-Artifactory'
                            specSource: 'taskConfiguration'
                            fileSpec: |
                              {
                                "files": [
                                  {
                                    "pattern": "ManagementPacks/SquaredUp.EAM.Library/bin/Release/*.mpb",
                                    "target": "release/com/squaredup/Enterprise.Application.Monitoring.MP/$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)/Enterprise.Application.Monitoring.MP-$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)-$(TIMESTAMP)-$(BUILD_NUMBER).mpb"
                                  },
                                  {
                                    "pattern": "ManagementPacks/SquaredUp.EAM.Custom/bin/Release/*.mpb",
                                    "target": "release/com/squaredup/Enterprise.Application.Monitoring.MP/$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)/Enterprise.Application.Monitoring.Overrides.MP-$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)-$(TIMESTAMP)-$(BUILD_NUMBER).mpb"
                                  }
                                ]
                              }
                            failNoOp: true

                      - task: PublishPipelineArtifact@1
                        inputs:
                            targetPath: 'ManagementPacks/SquaredUp.EAM.Library/bin/Release/SquaredUp.EAM.Library.mp'
                            artifact: 'Enterprise.Application.Monitoring.MP'
                            publishLocation: 'pipeline'
                      
                      - task: PublishPipelineArtifact@1
                        inputs:
                            targetPath: 'ManagementPacks/SquaredUp.EAM.Custom/bin/Release/SquaredUp.EAM.Custom.mp'
                            artifact: 'Enterprise.Application.Monitoring.MP'
                            publishLocation: 'pipeline'