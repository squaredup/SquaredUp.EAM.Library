name: '$(Rev:r)'
stages:
  - stage: buildStage
    displayName: Build Stage
    pool:
      vmImage: windows-2019
      name: Azure Pipelines
      demands:
        - msbuild
        - visualstudio
        - Cmd
        - vstest
    jobs:
      - job: buildJob
        displayName: Build Job
        steps:
          - task: DownloadSecureFile@1
            inputs:
              secureFile: SquaredUp.EAM.snk
            name: STRONGNAME_KEY
            displayName: Download secure file
          - task: AmazonWebServices.aws-vsts-tools.S3Download.S3Download@1
            displayName: 'S3 Download: VisualStudioAuthoringConsole'
            inputs:
              awsCredentials: DevOps Service Account
              regionName: us-east-1
              bucketName: releases.squaredup
              sourceFolder: squaredupltd/tools&scripts/vsae-msi/
              globExpressions: VisualStudioAuthoringConsole_x86.msi
              targetFolder: $(System.DefaultWorkingDirectory)
              logRequest: true
              logResponse: true
          - task: PowerShell@2
            name: prebuildTask
            inputs:
              targetType: inline
              script: >
                $date = $(Get-Date -Format "yyyyMMdd.HHmmss");
                Write-Host "##vso[task.setvariable variable=Build_Date;isOutput=true]$date"
                $file = "$(System.DefaultWorkingDirectory)\VisualStudioAuthoringConsole_x86.msi"
                $DataStamp = get-date -Format yyyyMMddTHHmmss
                $logFile = '{0}-{1}.log' -f $file, $DataStamp
                $MSIArguments = @(
                    "/i"
                    ('"{0}"' -f $file)
                    "/qn"
                    "/norestart"
                    "/L*v"
                    $logFile
                )
                Start-Process "msiexec.exe" -ArgumentList $MSIArguments -Wait -NoNewWindow

                Get-Content $logFile
                Get-ChildItem ManagementPacks -recurse -force
              failOnStderr: true
              failNoOp: true
          - task: MSBuild@1
            displayName: Build Overrides MP
            inputs:
              solution: $(buildsolutionFile1)
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)
              msbuildArguments: '/p:Version=1.0.0.0 /p:AssemblyOriginatorKeyFile=$(STRONGNAME_KEY.secureFilePath)'
              clean: true
              createLogFile: true
          - task: MSBuild@1
            displayName: Build Samples MP
            inputs:
              solution: $(buildsolutionFile3)
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)
              msbuildArguments: '/p:Version=$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION).$(BUILD_NUMBER) /p:AssemblyOriginatorKeyFile=$(STRONGNAME_KEY.secureFilePath)'
              clean: true
              createLogFile: true
          - task: MSBuild@1
            displayName: Build Library MP
            inputs:
              solution: $(buildsolutionFile2)
              platform: $(buildPlatform)
              configuration: $(buildConfiguration)
              msbuildArguments: '/p:Version=$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION).$(BUILD_NUMBER) /p:AssemblyOriginatorKeyFile=$(STRONGNAME_KEY.secureFilePath)'
              clean: true
              createLogFile: true
          - task: PowerShell@2
            displayName: Artifacts Uploads to S3
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "Configuring AWS Credentials"
                aws configure set aws_access_key_id $(AWS_ACCESS_KEY_ID)
                aws configure set aws_secret_access_key $(AWS_SECRET_ACCESS_KEY)
                aws configure set default.region us-east-1
                Write-Host "Successfully Configured AWS Credentials"
                Write-Host "Starting Upload"
                aws s3 cp "$(System.DefaultWorkingDirectory)\ManagementPacks\SquaredUp.EAM.Library\bin\Release\SquaredUp.EAM.Library.mpb" "s3://cibuilds.squaredup/management-packs/Enterprise.Application.Monitoring.MP/$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)/Enterprise.Application.Monitoring.MP-$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)-$(TIMESTAMP)-$(BUILD_NUMBER).mpb"
                aws s3 cp "$(System.DefaultWorkingDirectory)\ManagementPacks\SquaredUp.EAM.Custom\bin\Release\SquaredUp.EAM.Custom.mpb" "s3://cibuilds.squaredup/management-packs/Enterprise.Application.Monitoring.MP/$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)/Enterprise.Application.Monitoring.Overrides.MP-$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)-$(TIMESTAMP)-$(BUILD_NUMBER).mpb"
                aws s3 cp "$(System.DefaultWorkingDirectory)\ManagementPacks\SquaredUp.EAM.Samples\bin\Release\SquaredUp.EAM.Samples.mpb" "s3://cibuilds.squaredup/management-packs/Enterprise.Application.Monitoring.MP/$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)/Enterprise.Application.Monitoring.Samples.MP-$(EAM_MAJOR_VERSION).$(EAM_MINOR_VERSION).$(EAM_REVISION)-$(TIMESTAMP)-$(BUILD_NUMBER).mpb"
                Write-Host "Artifacts Uploaded to S3"
              workingDirectory: '$(System.DefaultWorkingDirectory)'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'ManagementPacks/SquaredUp.EAM.Library/bin/Release/SquaredUp.EAM.Library.mpb'
              artifact: Enterprise.Application.Monitoring.Library.MP
              publishLocation: pipeline
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'ManagementPacks\SquaredUp.EAM.Custom\bin\Release\SquaredUp.EAM.Custom.mpb'
              artifact: Enterprise.Application.Monitoring.Custom.MP
              publishLocation: pipeline
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'ManagementPacks\SquaredUp.EAM.Samples\bin\Release\SquaredUp.EAM.Samples.mpb'
              artifact: Enterprise.Application.Monitoring.Samples.MP
              publishLocation: pipeline
